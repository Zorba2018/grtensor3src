{VERSION 2 3 "DEC ALPHA UNIX" "2.3" }
{USTYLETAB {CSTYLE "Maple Input" -1 0 "Courier" 0 1 255 0 0 1 0 1 0 0 
1 0 0 0 0 }{CSTYLE "2D Math" -1 2 "Times" 0 1 0 0 0 0 0 0 2 0 0 0 0 0 
0 }{CSTYLE "2D Output" 2 20 "" 0 1 0 0 255 1 0 0 0 0 0 0 0 0 0 }
{PSTYLE "Normal" -1 0 1 {CSTYLE "" -1 -1 "Times" 1 10 0 0 0 1 2 2 2 0 
0 0 0 0 0 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "Text Output" -1 
2 1 {CSTYLE "" -1 -1 "Courier" 1 10 0 0 255 1 0 0 0 0 0 1 3 0 0 }1 0 
0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "" 2 6 1 {CSTYLE "" -1 -1 "" 0 1 
0 0 0 0 0 0 0 0 0 0 2 0 0 }0 0 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "M
aple Output" 0 11 1 {CSTYLE "" -1 -1 "" 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
}3 3 0 -1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "R3 Font 0" -1 256 1 
{CSTYLE "" -1 -1 "Helvetica" 1 10 255 0 0 1 2 1 2 0 0 0 0 0 0 }0 0 0 
-1 -1 -1 0 0 0 0 0 0 -1 0 }{PSTYLE "R3 Font 2" -1 257 1 {CSTYLE "" -1 
-1 "Courier" 1 10 0 0 0 1 2 2 2 0 0 0 0 0 0 }0 0 0 -1 -1 -1 0 0 0 0 0 
0 -1 0 }}
{SECT 0 {EXCHG {PARA 0 "" 0 "" {TEXT -1 4 "bihs" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 8 "restart:" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 7 "
grtw();" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%>GRTensorII~Version~1.72b~
(R4)G" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%,10~Feb~1999G" }}{PARA 11 "
" 1 "" {XPPMATH 20 "6#%ZDeveloped~by~Peter~Musgrave,~Denis~Pollney~and
~Kayll~LakeG" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%DCopyright~1994-1999~
by~the~authors.G" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%\\oLatest~version
~available~from:~http://astro.queensu.ca/|irgrtensor/G" }}{PARA 11 "" 
1 "" {XPPMATH 20 "6#%3/home/lake/MetricsG" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 16 "grlib(junction):" }}{PARA 6 "" 1 "" {TEXT -1 244 "T
he GRJunction Package Version 2.05 Release 4\nLast modified 16 Oct 199
7\nDeveloped by Peter Musgrave and Kayll Lake, (c) 1995-97\nLatest ver
sion available at:\n     http://www.astro.queensu.ca/~grtensor/GRjunct
ion.html\nHelp available via ?junction" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 23 "grOptionTrace := false;" }}{PARA 11 "" 1 "" {XPPMATH 
20 "6#>%.grOptionTraceG%&falseG" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 
1 0 20 "grOptionTermSize:=0;" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#>%1grO
ptionTermSizeG\"\"!" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 82 "Following \+
Barrab\\`\{e\}s and Israel determine the stress-energy of a lightlike \+
shell" }}{PARA 0 "" 0 "" {TEXT -1 83 "(horizon straddling) . Some care
 is required to set $f$ and $F$ but \{\\bf not\} their" }}{PARA 0 "" 
0 "" {TEXT -1 22 "derivatives to zero..." }}{PARA 0 "" 0 "" {TEXT -1 
0 "" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 53 "grOptionMetricPath := `/home
/lake/Junction4/Metrics`;" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#>%3grOpti
onMetricPathG%=/home/lake/Junction4/MetricsG" }}}{EXCHG {PARA 0 "" 0 "
" {TEXT -1 66 "\{\\bf Step 1:\} Load a spacetime and define a null sur
face in it. \\\\" }}{PARA 0 "" 0 "" {TEXT -1 0 "" }}{PARA 0 "" 0 "" 
{TEXT -1 101 "Note that in defining the surface we do not yet restrict
 to the horizon (i.e. $r$ such that $f = 0$)." }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 15 "qload(sph_v1); " }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%
2Default~spacetimeG%'sph_v1G" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%:For~
the~sph_v1~spacetime:G" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%,Coordinate
sG" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#-%\"xG6#%#upG" }}{PARA 11 "" 1 "
" {XPPMATH 20 "6&/)%#x~G%\"1G%\"uG/)F%%\"2G%\"rG/)F%%\"3G%&thetaG/)F%%
\"4G%$phiG" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%-Line~elementG" }}
{PARA 11 "" 1 "" {XPPMATH 20 "6#/*$%$~dsG\"\"#,***-%$expG6#-%$psiG6$%
\"uG%\"rGF&-%\"fGF.\"\"\"%#~dGF3)F/%#2~GF3!\"\"*.F)F3%#xiGF3F4F3)F/%\"
~GF3%#d~GF3)F0F;F3!\"#*(F0F&F4F3)%&thetaGF6F3F3**F0F&-%$sinG6#FAF&F4F3
)%$phiGF6F3F3" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "surf( sph_
v1, snull1);" }}{PARA 6 "" 1 "" {TEXT -1 108 "\n COORRDINATES: Enter t
he coordinates of the surface as a list\n   e.g. [theta, phi, tau]; \n
   Enter a list >" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 14 "[u,the
ta,phi];" }}{PARA 6 "" 1 "" {TEXT -1 188 "\n SHELL PARAMETER:\n   For \+
a one-parameter shell, enter the parameter name.\n   For a null shell \+
indicate which coordinate is a null generator\n   Enter coordinate nam
e or 0 (zero) for none >" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 2 "
u;" }}{PARA 6 "" 1 "" {TEXT -1 161 "\n SURFACE: Please enter the coord
inate definition of the surface\n   (the x\{^a\} = x(xi\{^b\})  ) as a
 LIST. \n   e.g. [ r=R(tau), theta=theta, phi=phi, t=T(tau)]\n  >" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 36 "[ r=r, theta=theta, phi=phi,
 u = u];" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU~Time~G$\"\"(!\"$" }
}{PARA 6 "" 1 "" {TEXT -1 125 "\n NORMAL TYPE: Please indicate the nat
ure of the snormal vector\n   (-1 = timelike, 0 = null, 1= spacelike) \+
Enter +1,0 or -1 >" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 2 "0;" }}
{PARA 6 "" 1 "" {TEXT -1 75 "\n CONSTRAINT: Use  +/- 1 = u\{^a\} u\{a
\} as a constraint ?    Enter 1 if yes >" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 2 "0;" }}{PARA 6 "" 1 "" {TEXT -1 206 "Default metric is \+
now sph_v1\n SURFACE: Enter the expression for the surface.\n   The su
rface will be defined by setting the \n   expression you enter to zero
.\n   To enter the normal explicitly, enter 0 (zero)" }}{PARA 11 "" 1 
"" {XPPMATH 20 "6#%(surfaceG" }}}{EXCHG {PARA 0 " >" 0 "" {MPLTEXT 1 
0 2 "0;" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU~Time~G$\"#6!\"$" }}
{PARA 6 "" 1 "" {TEXT -1 176 "\n NORMAL VECTOR: Enter the components o
f the normal vector\n   Do you wish to enter 1) covariant components\n
                        2) contravariant components\n   Enter 1 or 2 >
" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 2 "2;" }}{PARA 6 "" 1 "" 
{TEXT -1 100 "\n   Enter the components of the vector as a list\n   in
 the order (u,r,theta,phi)\n   Component list >" }}}{EXCHG {PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 13 "[1, 0, 0, 0];" }}{PARA 11 "" 1 "" {XPPMATH 20 
"6#-%\"nG6#%#upG" }}{PARA 6 "" 1 "" {TEXT -1 146 "\n NORMAL SIGN\n   T
he definition of the normal vector is +/- grad(surface)\n   please ent
er +1 or -1 to indicate the CHOICE of sign\n   Enter +1,-1 >" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 2 "1;" }}{PARA 6 "" 1 "" {TEXT 
-1 188 "\n TRANSVERSE VECTOR\n   Enter the components of the transvers
e vector N\n   Do you wish to enter 1) covariant components\n         \+
               2) contravariant components\n   Enter 1 or 2 >" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 2 "2;" }}{PARA 6 "" 1 "" {TEXT 
-1 100 "\n   Enter the components of the vector as a list\n   in the o
rder (u,r,theta,phi)\n   Component list >" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 26 "[0,xi*exp(-psi(u,r)),0,0];" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#-%\"NG6#%#upG" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU
~Time~G$\"\"&!\"$" }}{PARA 6 "" 1 "" {TEXT -1 28 "Default metric is no
w snull1" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU~Time~G$\"#=!\"$" }}
{PARA 6 "" 1 "" {TEXT -1 180 "\n nullg(up,up): Calculate nullg(up,up) \+
automatically?\n   (If N is orthogonal to those basis vectors on\n    \+
the surface which are *not* the null\n    generator of the surface)\n \+
  y/n" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 2 "y;" }}{PARA 11 "" 
1 "" {XPPMATH 20 "6#/%*CPU~Time~G$\"#7!\"$" }}{PARA 6 "" 1 "" {TEXT 
-1 45 " l\{^a\}: Enter the components for l\{^a\}\n   y/n" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 2 "y;" }}{PARA 6 "" 1 "" {TEXT -1 117 "
   Do you wish to enter 1) covariant components\n                     \+
   2) contravariant components\n   Enter 1 or 2 >" }}}{EXCHG {PARA 0 "
> " 0 "" {MPLTEXT 1 0 2 "2;" }}{PARA 6 "" 1 "" {TEXT -1 98 "\n   Enter
 the components of the vector as a list\n   in the order (u,theta,phi)
\n   Component list >" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "[xi
,0,0];" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#-%\"lG6#%#upG" }}{PARA 6 "" 
1 "" {TEXT -1 27 "ds has not been calculated." }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#%:For~the~sph_v1~spacetime:G" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#%<The~Equation~of~the~surfaceG" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#/%)surface~G\"\"!" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%:
For~the~sph_v1~spacetime:G" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%GCoordi
nate~transforms~onto~the~surfaceG" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#-
%&xformG6#%#upG" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/)%'xform~G%\"uGF&
" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/)%'xform~G%\"rGF&" }}{PARA 11 "" 
1 "" {XPPMATH 20 "6#/)%'xform~G%&thetaGF&" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#/)%'xform~G%$phiGF&" }}{PARA 6 "" 1 "" {TEXT -1 149 "Th
e intrinsic metric and normal vector have been calculated.\nYou may wi
sh to simplify them further before saving the surface\nor calculating \+
K(dn,dn) " }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 95 "We now check $n_\\al
pha$ and $N_\\alpha$ satisfy the necessary conditions. (Recall $f = 0$
 on the" }}{PARA 0 "" 0 "" {TEXT -1 38 "horizon so \{\\tt ndotn\} is z
ero there.)" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "grcalc(ndotn[sph_v1]
);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU~Time~G$\"\"#!\"$" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "grdisplay(_);" }}{PARA 11 "
" 1 "" {XPPMATH 20 "6#%:For~the~sph_v1~spacetime:G" }}{PARA 11 "" 1 "
" {XPPMATH 20 "6#%+n|fra|hr~n|fr^a|hrG" }}{PARA 11 "" 1 "" {XPPMATH 
20 "6#/%'ndotn~G,$*&-%$expG6#-%$psiG6$%\"uG%\"rG\"\"#-%\"fGF,\"\"\"!\"
\"" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "grcalc(NdotN[sph_v1])
;" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU~Time~G$\"\"&!\"$" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "grdisplay(_);" }}{PARA 11 "
" 1 "" {XPPMATH 20 "6#%:For~the~sph_v1~spacetime:G" }}{PARA 11 "" 1 "
" {XPPMATH 20 "6#%+N|fra|hr~N|fr^a|hrG" }}{PARA 11 "" 1 "" {XPPMATH 
20 "6#/%'NdotN~G\"\"!" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "gr
calc(Ndotn[sph_v1]);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU~Time~G$
\"\"$!\"$" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 13 "grdisplay(_);
" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%:For~the~sph_v1~spacetime:G" }}
{PARA 11 "" 1 "" {XPPMATH 20 "6#%+n|fra|hr~N|fr^a|hrG" }}{PARA 11 "" 
1 "" {XPPMATH 20 "6#/%'Ndotn~G,$*(-%$expG6#-%$psiG6$%\"uG%\"rG\"\"\"%#
xiG\"\"#-F(6#,$F*!\"\"F/F5" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
50 "grcalc( nullK(dn,dn), nullK(dn,up)); grdisplay(_);" }}{PARA 6 "" 
1 "" {TEXT -1 36 "Created definition for nullK(dn,up) " }}{PARA 11 "" 
1 "" {XPPMATH 20 "6#/%*CPU~Time~G$\"$_\"!\"$" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#%:For~the~snull1~spacetime:G" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#%EExtrinsic~Curvature~(for~null~shell)G" }}{PARA 11 "" 
1 "" {XPPMATH 20 "6#-%&nullKG6$%#dnGF&" }}{PARA 11 "" 1 "" {XPPMATH 
20 "6#/*&&%#K~G6#%\"uG\"\"\"&%!GF'F),$**-%$expG6#-%$psiG6$F(%\"rGF)%#x
iGF)-F/6#,$F1!\"\"F),(*&-%%diffG6$F1F(F)F5F)!\"#*(F.F)-%\"fGF3F)-F=6$F
1F4F)\"\"#*&F.F)-F=6$FAF4F)F)F)#F9FE" }}{PARA 11 "" 1 "" {XPPMATH 20 "
6#/*&&%#K~G6#%&thetaG\"\"\"&%!GF'F)*(%#xiGF)-%$expG6#,$-%$psiG6$%\"uG%
\"rG!\"\"F)F6F)" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/*&&%#K~G6#%$phiG\"
\"\"&%!GF'F)**%#xiGF)-%$expG6#,$-%$psiG6$%\"uG%\"rG!\"\"F)F6F)-%$sinG6
#%&thetaG\"\"#" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%-nullK(dn,up)G" }}
{PARA 11 "" 1 "" {XPPMATH 20 "6#-%&nullKG6$%#dnG%#upG" }}{PARA 11 "" 
1 "" {XPPMATH 20 "6#/*&&%#K~G6#%&thetaG\"\"\")%!GF(F)*(%\"rG!\"\"%#xiG
F)-%$expG6#,$-%$psiG6$%\"uGF-F.F)" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/
*&&%#K~G6#%$phiG\"\"\")%!GF(F)*(%\"rG!\"\"%#xiGF)-%$expG6#,$-%$psiG6$%
\"uGF-F.F)" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 74 "We now set $f$ to z
ero and to prevent the derivatives of $f$ from becoming" }}{PARA 0 "" 
0 "" {TEXT -1 80 "zero we temporarily replace them with \{\\tt df\} an
d then immediatly restore them." }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 49 "
grmap( _, subs, diff(f(u,r),r)=df,f(u,r)=0, 'x');" }}{PARA 6 "" 1 "" 
{TEXT -1 75 "Applying routine subs to nullK(dn,dn)\nApplying routine s
ubs to nullK(dn,up)" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 41 "grma
p(_, subs, df = diff(f(u,r),r), 'x');" }}{PARA 6 "" 1 "" {TEXT -1 75 "
Applying routine subs to nullK(dn,dn)\nApplying routine subs to nullK(
dn,up)" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 41 "gralter(_,simplif
y,expand); grdisplay(_);" }}{PARA 6 "" 1 "" {TEXT -1 242 "Component si
mplification of a GRTensorII object:\n \nApplying routine simplify to \+
object nullK(dn,dn)\nApplying routine simplify to object nullK(dn,up)
\nApplying routine expand to object nullK(dn,dn)\nApplying routine exp
and to object nullK(dn,up)" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU~T
ime~G$\"#b!\"$" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%:For~the~snull1~spa
cetime:G" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%EExtrinsic~Curvature~(for
~null~shell)G" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#-%&nullKG6$%#dnGF&" }
}{PARA 11 "" 1 "" {XPPMATH 20 "6#/*&&%#K~G6#%\"uG\"\"\"&%!GF'F),&*&-%%
diffG6$-%$psiG6$F(%\"rGF(F)%#xiG\"\"#F)*(F5F)-%$expG6#F1F)-F/6$-%\"fGF
3F4F)#!\"\"F6" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/*&&%#K~G6#%&thetaG\"
\"\"&%!GF'F)*(%#xiGF)-%$expG6#-%$psiG6$%\"uG%\"rG!\"\"F5F)" }}{PARA 
11 "" 1 "" {XPPMATH 20 "6#/*&&%#K~G6#%$phiG\"\"\"&%!GF'F),&*(%#xiGF)-%
$expG6#-%$psiG6$%\"uG%\"rG!\"\"F6F)F)**F.F)F/F7F6F)-%$cosG6#%&thetaG\"
\"#F7" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%-nullK(dn,up)G" }}{PARA 11 "
" 1 "" {XPPMATH 20 "6#-%&nullKG6$%#dnG%#upG" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#/*&&%#K~G6#%&thetaG\"\"\")%!GF(F)*(%\"rG!\"\"%#xiGF)-%$
expG6#-%$psiG6$%\"uGF-F." }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/*&&%#K~G6
#%$phiG\"\"\")%!GF(F)*(%\"rG!\"\"%#xiGF)-%$expG6#-%$psiG6$%\"uGF-F." }
}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 68 "\{\\bf Step 2:\} Load a second s
pacetime and define a surface in it. \\\\" }}{PARA 0 "> " 0 "" 
{MPLTEXT 1 0 14 "qload(sph_v2);" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%2
Default~spacetimeG%'sph_v2G" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%:For~t
he~sph_v2~spacetime:G" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%,Coordinates
G" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#-%\"xG6#%#upG" }}{PARA 11 "" 1 "
" {XPPMATH 20 "6&/)%#x~G%\"1G%\"UG/)F%%\"2G%\"RG/)F%%\"3G%&thetaG/)F%%
\"4G%$phiG" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%-Line~elementG" }}
{PARA 11 "" 1 "" {XPPMATH 20 "6#/*$%$~dsG\"\"#,***-%$expG6#-%$chiG6$%
\"UG%\"RGF&-%\"FGF.\"\"\"%#~dGF3)F/%#2~GF3!\"\"*.F)F3%#XiGF3F4F3)F/%\"
~GF3%#d~GF3)F0F;F3!\"#*(F0F&F4F3)%&thetaGF6F3F3**F0F&-%$sinG6#FAF&F4F3
)%$phiGF6F3F3" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 22 "surf( sph_
v2, snull2);" }}{PARA 6 "" 1 "" {TEXT -1 108 "\n COORRDINATES: Enter t
he coordinates of the surface as a list\n   e.g. [theta, phi, tau]; \n
   Enter a list >" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 14 "[u,the
ta,phi];" }}{PARA 6 "" 1 "" {TEXT -1 188 "\n SHELL PARAMETER:\n   For \+
a one-parameter shell, enter the parameter name.\n   For a null shell \+
indicate which coordinate is a null generator\n   Enter coordinate nam
e or 0 (zero) for none >" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 2 "
u;" }}{PARA 6 "" 1 "" {TEXT -1 161 "\n SURFACE: Please enter the coord
inate definition of the surface\n   (the x\{^a\} = x(xi\{^b\})  ) as a
 LIST. \n   e.g. [ r=R(tau), theta=theta, phi=phi, t=T(tau)]\n  >" }}}
{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 36 "[ R=r, theta=theta, phi=phi,
 U = u];" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU~Time~G$\"\"%!\"$" }
}{PARA 6 "" 1 "" {TEXT -1 125 "\n NORMAL TYPE: Please indicate the nat
ure of the snormal vector\n   (-1 = timelike, 0 = null, 1= spacelike) \+
Enter +1,0 or -1 >" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 2 "0;" }}
{PARA 6 "" 1 "" {TEXT -1 75 "\n CONSTRAINT: Use  +/- 1 = u\{^a\} u\{a
\} as a constraint ?    Enter 1 if yes >" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 2 "0;" }}{PARA 6 "" 1 "" {TEXT -1 206 "Default metric is \+
now sph_v2\n SURFACE: Enter the expression for the surface.\n   The su
rface will be defined by setting the \n   expression you enter to zero
.\n   To enter the normal explicitly, enter 0 (zero)" }}{PARA 11 "" 1 
"" {XPPMATH 20 "6#%(surfaceG" }}}{EXCHG {PARA 0 " >" 0 "" {MPLTEXT 1 
0 2 "0;" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU~Time~G$\"\")!\"$" }}
{PARA 6 "" 1 "" {TEXT -1 176 "\n NORMAL VECTOR: Enter the components o
f the normal vector\n   Do you wish to enter 1) covariant components\n
                        2) contravariant components\n   Enter 1 or 2 >
" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 2 "2;" }}{PARA 6 "" 1 "" 
{TEXT -1 100 "\n   Enter the components of the vector as a list\n   in
 the order (U,R,theta,phi)\n   Component list >" }}}{EXCHG {PARA 0 "> \+
" 0 "" {MPLTEXT 1 0 10 "[1,0,0,0];" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#
-%\"nG6#%#upG" }}{PARA 6 "" 1 "" {TEXT -1 146 "\n NORMAL SIGN\n   The \+
definition of the normal vector is +/- grad(surface)\n   please enter \+
+1 or -1 to indicate the CHOICE of sign\n   Enter +1,-1 >" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 2 "1;" }}{PARA 6 "" 1 "" {TEXT -1 188 "
\n TRANSVERSE VECTOR\n   Enter the components of the transverse vector
 N\n   Do you wish to enter 1) covariant components\n                 \+
       2) contravariant components\n   Enter 1 or 2 >" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 2 "2;" }}{PARA 6 "" 1 "" {TEXT -1 100 "
\n   Enter the components of the vector as a list\n   in the order (U,
R,theta,phi)\n   Component list >" }}}{EXCHG {PARA 0 "> " 0 "" 
{MPLTEXT 1 0 28 "[0,Xi*exp(-chi(U,R)), 0, 0];" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#-%\"NG6#%#upG" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU
~Time~G$\"\"%!\"$" }}{PARA 6 "" 1 "" {TEXT -1 28 "Default metric is no
w snull2" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU~Time~G$\"#8!\"$" }}
{PARA 6 "" 1 "" {TEXT -1 180 "\n nullg(up,up): Calculate nullg(up,up) \+
automatically?\n   (If N is orthogonal to those basis vectors on\n    \+
the surface which are *not* the null\n    generator of the surface)\n \+
  y/n" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 2 "y;" }}{PARA 11 "" 
1 "" {XPPMATH 20 "6#/%*CPU~Time~G$\"\"&!\"$" }}{PARA 6 "" 1 "" {TEXT 
-1 45 " l\{^a\}: Enter the components for l\{^a\}\n   y/n" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 2 "y;" }}{PARA 6 "" 1 "" {TEXT -1 117 "
   Do you wish to enter 1) covariant components\n                     \+
   2) contravariant components\n   Enter 1 or 2 >" }}}{EXCHG {PARA 0 "
> " 0 "" {MPLTEXT 1 0 2 "2;" }}{PARA 6 "" 1 "" {TEXT -1 98 "\n   Enter
 the components of the vector as a list\n   in the order (u,theta,phi)
\n   Component list >" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 9 "[Xi
,0,0];" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#-%\"lG6#%#upG" }}{PARA 6 "" 
1 "" {TEXT -1 27 "ds has not been calculated." }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#%:For~the~sph_v2~spacetime:G" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#%<The~Equation~of~the~surfaceG" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#/%)surface~G\"\"!" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%:
For~the~sph_v2~spacetime:G" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%GCoordi
nate~transforms~onto~the~surfaceG" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#-
%&xformG6#%#upG" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/)%'xform~G%\"UG%\"
uG" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/)%'xform~G%\"RG%\"rG" }}{PARA 
11 "" 1 "" {XPPMATH 20 "6#/)%'xform~G%&thetaGF&" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#/)%'xform~G%$phiGF&" }}{PARA 6 "" 1 "" {TEXT -1 149 "Th
e intrinsic metric and normal vector have been calculated.\nYou may wi
sh to simplify them further before saving the surface\nor calculating \+
K(dn,dn) " }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 37 "grcalc( nullK(
dn,dn), nullK(dn,up)); " }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU~Time
~G$\"#v!\"$" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 74 "We now set $F$ to \+
zero and to prevent the derivatives of $F$ from becoming" }}{PARA 0 "
" 0 "" {TEXT -1 80 "zero we temporarily replace them with \{\\tt df\} \+
and then immediatly restore them." }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 
52 "grmap( _, subs, diff(F(u,r),r)=df, F(u,r) = 0, 'x');" }}{PARA 6 "
" 1 "" {TEXT -1 75 "Applying routine subs to nullK(dn,dn)\nApplying ro
utine subs to nullK(dn,up)" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 
41 "grmap(_, subs, df = diff(F(u,r),r), 'x');" }}{PARA 6 "" 1 "" 
{TEXT -1 75 "Applying routine subs to nullK(dn,dn)\nApplying routine s
ubs to nullK(dn,up)" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 28 "gral
ter(_,simplify,expand); " }}{PARA 6 "" 1 "" {TEXT -1 242 "Component si
mplification of a GRTensorII object:\n \nApplying routine simplify to \+
object nullK(dn,dn)\nApplying routine simplify to object nullK(dn,up)
\nApplying routine expand to object nullK(dn,dn)\nApplying routine exp
and to object nullK(dn,up)" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU~T
ime~G$\"#K!\"$" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 70 "\{\\bf Step 3:
\} \{\\tt join\} the two spacetimes and evaluate $S^\{i j\}$ \\\\ " }}
{PARA 0 "> " 0 "" {MPLTEXT 1 0 21 "join(snull1, snull2);" }}{PARA 6 "
" 1 "" {TEXT -1 130 "snull1 and snull2 are now joined.\nThe default me
tric name is snull1.\nThe exterior metric is: snull1\nThe interior met
ric is: snull2" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU~Time~G$\"\"&!
\"$" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%:For~the~snull1~spacetime:G" }
}{PARA 11 "" 1 "" {XPPMATH 20 "6#%@~Jump~from~defaultMetric~-~MintG" }
}{PARA 11 "" 1 "" {XPPMATH 20 "6#/*&&%8Jump~[g(dn,dn),~snull2]G6#%\"uG
\"\"\"&%!GF'F),&*&-%$expG6#-%$psiG6$F(%\"rG\"\"#-%\"fGF3F)!\"\"*&-F/6#
-%$chiGF3F5-%\"FGF3F)F)" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#%'sph_v1G" 
}}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 57 "(recall $f = F = 0$ on the hori
zon, so the above is zero)" }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 23 "grcal
c(nullS3(up,up) );" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#/%*CPU~Time~G$\"
#A!\"$" }}}{EXCHG {PARA 0 "> " 0 "" {MPLTEXT 1 0 28 "gralter(_,expand,
simplify); " }}{PARA 6 "" 1 "" {TEXT -1 148 "Component simplification \+
of a GRTensorII object:\n \nApplying routine expand to object nullS3(u
p,up)\nApplying routine simplify to object nullS3(up,up)" }}{PARA 11 "
" 1 "" {XPPMATH 20 "6#/%*CPU~Time~G$\"$=$!\"$" }}}{EXCHG {PARA 0 "" 0 
"" {TEXT -1 52 "Set $f$ and $F$ (but not their derivatives) to zero." 
}}{PARA 0 "> " 0 "" {MPLTEXT 1 0 86 "grmap(_, subs, diff(f(u,r),r) = d
f, diff(F(u,r),r) = dF, f(u,r)= 0, F(u,r) = 0, 'x'); " }}{PARA 6 "" 1 
"" {TEXT -1 38 "Applying routine subs to nullS3(up,up)" }}}{EXCHG 
{PARA 0 "> " 0 "" {MPLTEXT 1 0 62 "grmap(_, subs, df =diff(f(u,r),r) ,
 dF = diff(F(u,r),r), 'x');" }}{PARA 6 "" 1 "" {TEXT -1 38 "Applying r
outine subs to nullS3(up,up)" }}}{EXCHG {PARA 0 "" 0 "" {TEXT -1 57 "A
pply autoAlias to improve the appearance of derivatives." }}{PARA 0 ">
 " 0 "" {MPLTEXT 1 0 23 "grmap(_,autoAlias,'x');" }}{PARA 6 "" 1 "" 
{TEXT -1 43 "Applying routine autoAlias to nullS3(up,up)" }}}{EXCHG 
{PARA 0 "" 0 "" {TEXT -1 55 "The results agree with (68) in Barrab\\`
\{e\}s and Israel." }}{PARA 0 "> " 0 "" {MPLTEXT 1 0 48 "gralter(_,exp
and,simplify,factor); grdisplay(_);" }}{PARA 6 "" 1 "" {TEXT -1 196 "C
omponent simplification of a GRTensorII object:\n \nApplying routine e
xpand to object nullS3(up,up)\nApplying routine simplify to object nul
lS3(up,up)\nApplying routine factor to object nullS3(up,up)" }}{PARA 
11 "" 1 "" {XPPMATH 20 "6#/%*CPU~Time~G$\"#&)!\"$" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#%:For~the~snull1~spacetime:G" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#%8Intrinsic~stress-energyG" }}{PARA 11 "" 1 "" 
{XPPMATH 20 "6#-%'nullS3G6$%#upGF&" }}{PARA 11 "" 1 "" {XPPMATH 20 "6#
/*&)%(nullS3~G%\"uG\"\"\")%!GF'F(,$*(,&*&%#xiGF(-%$expG6#,$%$psiG!\"\"
F(F5*&-F16#,$%$chiGF5F(%#XiGF(F(F(%\"rGF5%#PiGF5#F5\"\"%" }}{PARA 11 "
" 1 "" {XPPMATH 20 "6#/*&)%(nullS3~G%&thetaG\"\"\")%!GF'F(,$*(,**&&%$p
siG6#%\"uGF(%#xiG\"\"#!\"#*(F3F(-%$expG6#F0F(&%\"fG6#%\"rGF(F(*&&%$chi
GF1F(%#XiGF4F4*(FAF(-F86#F@F(&%\"FGF<F(!\"\"F(F=F5%#PiGFG#FG\"#;" }}
{PARA 11 "" 1 "" {XPPMATH 20 "6#/*&)%(nullS3~G%$phiG\"\"\")%!GF'F(,$*,
,**&&%$psiG6#%\"uGF(%#xiG\"\"#!\"#*(F3F(-%$expG6#F0F(&%\"fG6#%\"rGF(F(
*&&%$chiGF1F(%#XiGF4F4*(FAF(-F86#F@F(&%\"FGF<F(!\"\"F(F=F5%#PiGFG,&-%$
cosG6#%&thetaGF(FGF(FG,&FJF(F(F(FG#F(\"#;" }}}{EXCHG {PARA 0 "> " 0 "
" {MPLTEXT 1 0 0 "" }}}}{MARK "61 0 0" 0 }{VIEWOPTS 1 1 0 1 1 1803 }
